on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  python_version: '3.12'

name: CI

permissions:
  contents: read

jobs:

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ env.python_version }}
      - name: Lint with Pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
      - name: Install uv
        uses: astral-sh/setup-uv@023eb7875fa1caa15814da58d1df7350f8fb1fd9 # v0.4.17
      - name: Check uv lock file integrity
        run: uv lock --locked --offline

  test:
    needs: lint
    name: Test with Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    runs-on: windows-latest
    timeout-minutes: 60
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Install uv
        uses: astral-sh/setup-uv@023eb7875fa1caa15814da58d1df7350f8fb1fd9 # v0.4.17
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Set up Python
        run: uv python install
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Install dependencies
        run: uv pip install tox tox-gh-actions
      - name: Run tests
        run: uv run tox
      - name: Test with tox
        run: tox

  build:
    needs: lint
    name: Build GTK${{ matrix.gtk-version }} Binaries
    runs-on: windows-latest
    permissions:
      contents: write
    timeout-minutes: 75
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        gtk-version: ['3', '4']

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ env.python_version }}
      - name: Install uv
        uses: astral-sh/setup-uv@023eb7875fa1caa15814da58d1df7350f8fb1fd9 # v0.4.17
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Build GTK3
        if: matrix.gtk-version == '3'
        run: >
          uv run gvsbuild build --ninja-opts -j2 --enable-gi --py-wheel gtk3 gtksourceview4 graphene pygobject
          adwaita-icon-theme glib-networking
      - name: Build GTK4
        if: matrix.gtk-version == '4'
        run: > # Use -j2 option to prevent out of memory errors with GitHub Action runners
          uv run gvsbuild build --ninja-opts -j2 --enable-gi --py-wheel gtk4 libadwaita gtksourceview5 pygobject
          adwaita-icon-theme gtkmm
      - name: Copy wheel files
        run: |
          New-Item "C:\gtk-build\gtk\x64\release\wheels" -ItemType "directory"
          Copy-Item (Resolve-Path C:\gtk-build\build\x64\release\pygobject\dist\PyGObject*.whl) "C:\gtk-build\gtk\x64\release\wheels"
          Copy-Item (Resolve-Path C:\gtk-build\build\x64\release\pycairo\dist\pycairo*.whl) "C:\gtk-build\gtk\x64\release\wheels"
      - name: Archive GTK runtime
        run: 7z a -tzip GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.sha }}_x64.zip C:\gtk-build\gtk\x64\release\*
      - name: Upload GTK${{ matrix.gtk-version }}_Gvsbuild-${{ github.sha }}_x64.zip
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.sha }}_x64.zip
          path: GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.sha }}_x64.zip
      - name: Upload Release Assets
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mv GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.sha }}_x64.zip GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.event.release.tag_name }}_x64.zip
          gh release upload ${{ github.event.release.tag_name }} "GTK${{ matrix.gtk-version }}_Gvsbuild_${{ github.event.release.tag_name }}_x64.zip"
      - name: Create Source Dist and Wheel
        if: matrix.gtk-version == '4'
        run: uv build
      - name: Upload gvsbuild-${{ github.event.release.tag_name }}.tar.gz
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: github.event_name == 'release' && matrix.gtk-version == '4'
        with:
          name: gvsbuild-${{ github.event.release.tag_name }}.tar.gz
          path: dist/gvsbuild-${{ github.event.release.tag_name }}.tar.gz
      - name: Upload gvsbuild-${{ github.event.release.tag_name }}-py3-none-any.whl
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: github.event_name == 'release' && matrix.gtk-version == '4'
        with:
          name: gvsbuild-${{ github.event.release.tag_name }}-py3-none-any.whl
          path: dist/gvsbuild-${{ github.event.release.tag_name }}-py3-none-any.whl
  publish-to-pypi:
    name: Publish to PyPI (release only)
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Download tar.gz
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: gvsbuild-${{ github.event.release.tag_name }}.tar.gz
          path: dist
      - name: Download wheel
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: gvsbuild-${{ github.event.release.tag_name }}-py3-none-any.whl
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # release/v1
