From 2304f7de2df1dfe9d3faaeea6264d4e6a0ca7cd4 Mon Sep 17 00:00:00 2001
From: Silvio Lazzeretti <silviola@amazon.com>
Date: Wed, 15 Nov 2017 16:12:26 +0100
Subject: [PATCH] websocket-connection: do not send new frames until the
 previous is not successfully sent

If the sending of a frame fails with G_IO_ERROR_WOULD_BLOCK,
we must send it again before sending more urgent ones.
This change is relevant in case a SSL connection is being used
because SSL expects the same message to be resent

https://bugzilla.gnome.org/show_bug.cgi?id=790436
---
 libsoup/soup-websocket-connection.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/libsoup/soup-websocket-connection.c b/libsoup/soup-websocket-connection.c
index 04bf47f..b40280c 100644
--- a/libsoup/soup-websocket-connection.c
+++ b/libsoup/soup-websocket-connection.c
@@ -99,6 +99,7 @@ typedef struct {
 	gboolean last;
 	gsize sent;
 	gsize amount;
+	gboolean pending;
 } Frame;
 
 struct _SoupWebsocketConnectionPrivate {
@@ -934,6 +935,9 @@ on_web_socket_output (GObject *pollable_stream,
 		if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_WOULD_BLOCK)) {
 			g_clear_error (&error);
 			count = 0;
+
+			g_debug("failed to send frame because it would block, marking as pending");
+			frame->pending = TRUE;
 		} else {
 			emit_error_and_close (self, error, TRUE);
 			return FALSE;
@@ -996,11 +1000,11 @@ queue_frame (SoupWebsocketConnection *self,
 
 	/* If urgent put at front of queue */
 	if (flags & SOUP_WEBSOCKET_QUEUE_URGENT) {
-		/* But we can't interrupt a message already partially sent */
+		/* But we can't interrupt a message already partially sent or pending */
 		prev = g_queue_pop_head (&pv->outgoing);
 		if (prev == NULL) {
 			g_queue_push_head (&pv->outgoing, frame);
-		} else if (prev->sent > 0) {
+		} else if (prev->sent > 0 || prev->pending) {
 			g_queue_push_head (&pv->outgoing, frame);
 			g_queue_push_head (&pv->outgoing, prev);
 		} else {
-- 
2.7.4

